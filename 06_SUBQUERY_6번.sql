SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE MAIN
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE HIRE_DATE = (SELECT MIN(HIRE_DATE)
							     FROM EMPLOYEE SUB
							     WHERE ENT_YN != 'Y'
							     AND MAIN.DEPT_CODE = SUB.DEPT_CODE
							     OR (MAIN.DEPT_CODE IS NULL AND SUB.DEPT_CODE IS NULL))
ORDER BY HIRE_DATE;

SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE HIRE_DATE IN (SELECT MIN(HIRE_DATE)
                    FROM EMPLOYEE
                    WHERE ENT_YN != 'Y'
                    GROUP BY DEPT_CODE)
ORDER BY HIRE_DATE;

SELECT EMP_ID, EMP_NAME, DEPT_CODE, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE MAIN
JOIN JOB USING(JOB_CODE)
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE ENT_YN = 'N'
AND HIRE_DATE = (SELECT MIN(HIRE_DATE)
                 FROM EMPLOYEE SUB
                 WHERE MAIN.DEPT_CODE = SUB.DEPT_CODE) -- MAIN 과 SUB 순서 상관없이 결과는 같음
ORDER BY HIRE_DATE;

SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE);

SELECT DEPT_ID, DEPT_TITLE
FROM DEPARTMENT;

SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE ENT_YN = 'N'
ORDER BY EMP_ID;

SELECT EMP_ID, EMP_NAME, JOB_NAME,
			'2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' )"나이",
			 SALARY * ( 1 + NVL(BONUS, 0) ) * 12 "보너스포함연봉"
FROM EMPLOYEE
NATURAL JOIN JOB;

-- 6번
-- 서브 쿼리에 들어갈 내용
SELECT MIN(HIRE_DATE)
FROM EMPLOYEE
WHERE ENT_YN != 'Y'
AND DEPT_CODE = 'D1';

/*
SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, HIRE_DATE
FROM EMPLOYEE MAIN
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
-- WHERE ENT_YN = 'N'
AND HIRE_DATE IN (SELECT MIN(HIRE_DATE)
                  FROM EMPLOYEE SUB
                  WHERE MAIN.DEPT_CODE = SUB.DEPT_CODE
                  AND (ENT_YN = 'N'
                  OR MAIN.DEPT_CODE IS NULL)
                  AND MAIN.DEPT_CODE = SUB.DEPT_CODE
                  AND (ENT_YN = 'N'
                  OR SUB.DEPT_CODE IS NULL))
ORDER BY HIRE_DATE;
*/