-- 비밀번호 update
UPDATE "MEMBER" SET MEMBER_PW = '$2a$10$h9WqHozrLDEPb2H.WeksFu/84M8bLDi4pDYU9.kTabNp5pdDF9Lae'
WHERE MEMBER_NO = 1;

-- 로그인 SQL
SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PW,
MEMBER_TEL, MEMBER_ADDRESS, PROFILE_IMG, AUTHORITY,
TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') ENROLL_DATE
FROM "MEMBER"
WHERE MEMBER_EMAIL = 'user01@kh.or.kr'
AND MEMBER_DEL_FL = 'N';

-- 이메일 중복검사
SELECT COUNT(*)
FROM "MEMBER"
WHERE MEMBER_DEL_FL = 'N'
AND MEMBER_EMAIL = 'user01@kh.or.kr';

-- 닉네임 중복 검사
SELECT COUNT(*)
FROM "MEMBER"
WHERE MEMBER_DEL_FL = 'N'
AND MEMBER_NICKNAME  = '유저일';

-- 인증번호 테이블 조회
SELECT * FROM "TB_AUTH_KEY";

-- 이메일, 인증번호 확인
SELECT COUNT(*)
FROM TB_AUTH_KEY
WHERE EMAIL = ''
AND AUTH_KEY = '';

UPDATE "MEMBER" SET
MEMBER_DEL_FL = 'Y'
WHERE MEMBER_NO = 6;

UPDATE "MEMBER" SET
MEMBER_NO = 3
WHERE MEMBER_NO = 8;

COMMIT;

DELETE FROM "MEMBER" WHERE MEMBER_NO = 3;

-- 파일 목록 조회
SELECT FILE_NO, FILE_PATH, FILE_ORIGINAL_NAME, FILE_RENAME, MEMBER_NICKNAME,
TO_CHAR(FILE_UPLOAD_DATE, 'YYYY-MM-DD') FILE_UPLOAD_DATE
FROM "UPLOAD_FILE"
JOIN "MEMBER" USING (MEMBER_NO)
ORDER BY FILE_NO DESC;

UPDATE "MEMBER" SET
MEMBER_PW = '$2a$10$cUjrg0EjalRgh9w0i0Dg6OGV67WviEYVFwPL/U7krKx4l2Bdid8SO'
WHERE MEMBER_NO = 1;

SELECT * FROM "MEMBER";

UPDATE "MEMBER" SET MEMBER_DEL_FL ='N' WHERE MEMBER_NO = 4;

UPDATE UPLOAD_FILE SET
FILE_ORIGINAL_NAME = 'zzang.png'
WHERE FILE_NO = 1;

-- 게시판 종류 조회
SELECT BOARD_CODE "boardCode", BOARD_NAME "boardName"
FROM BOARD_TYPE
ORDER BY BOARD_CODE;

SELECT * FROM BOARD_TYPE
ORDER BY BOARD_CODE;

-- 게시글 목록 조회
-- 특정 게시판에 삭제되지 않은 게시글 목록 조회
-- 단, 최신글이 제일 위에 존재
-- 몇 초/분/시간 전 또는 YYYY-MM-DD 형식으로 작성일 조회
-- + 댓글 개수
-- + 좋아요 개수

-- 번호 / 제목[댓글 개수] / 작성자 닉네임 / 작성일 / 조회수 / 좋아요 개수
-- 상관 서브 쿼리
-- 1) 메인 쿼리 1행 조회
-- 2) 1행 조회 결과를 이용해서 서브쿼리 수행
--    (메인쿼리 모두 조회할 때까지 반복)

SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
	(SELECT COUNT(*) 
	FROM "COMMENT" C 
	WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,	
	
	(SELECT COUNT(*)
	FROM BOARD_LIKE L
	WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
	
	CASE 
		WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60
		THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60 * 60) || '초 전'
		
		WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24
		THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24 * 60) || '분 전'
		
		WHEN SYSDATE - BOARD_WRITE_DATE < 1
		THEN FLOOR((SYSDATE - BOARD_WRITE_DATE) * 24) || '시간 전'
		
		ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
		
	END BOARD_WRITE_DATE
	
FROM BOARD B
JOIN "MEMBER" USING(MEMBER_NO)
WHERE BOARD_DEL_FL = 'N'
AND BOARD_CODE = 1
ORDER BY BOARD_NO DESC;

-- 현재 시간 - 하루 전
SELECT (SYSDATE -
	TO_DATE('2024-04-21 12:01:30', 'YYYY-MM-DD HH24:MI:SS')) * 60 * 60 * 24
FROM DUAL;

SELECT BOARD_WRITE_DATE FROM BOARD;

-- 게시글 2개 추가
BEGIN
	FOR I IN 1..2 LOOP
		
		INSERT INTO "BOARD"
		VALUES(SEQ_BOARD_NO.NEXTVAL,
					 SEQ_BOARD_NO.CURRVAL || '번째 게시글',
					 SEQ_BOARD_NO.CURRVAL || '번째 게시글 내용 입니다',
					 DEFAULT, DEFAULT, DEFAULT, DEFAULT,
					 CEIL( DBMS_RANDOM.VALUE(0,3) ), -- BOARD_CODE(게시판종류)
					 1 -- MEMBER_NO(작성회원번호)
		);
		
	END LOOP;
END;

COMMIT;

-- 특정 게시판 게시글 수 조회
SELECT COUNT(*)
FROM "BOARD"
WHERE BOARD_DEL_FL = 'N'
AND BOARD_CODE = 1;

-------------------------------------------------------
/* 게시글 상세 조회 */
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_CODE, READ_COUNT,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,
	TO_CHAR(BOARD_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE, 
	TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,
	(SELECT COUNT(*)
	 FROM "BOARD_LIKE"
	 WHERE BOARD_NO = 1950) LIKE_COUNT,
	(SELECT IMG_PATH || IMG_RENAME
	 FROM "BOARD_IMG"
	 WHERE BOARD_NO = 1950
	 AND   IMG_ORDER = 0) THUMBNAIL
FROM "BOARD"
JOIN "MEMBER" USING(MEMBER_NO)
WHERE BOARD_DEL_FL = 'N'
AND BOARD_CODE = 1
AND BOARD_NO = 1995;

---------------------------------------------

/* 상세조회 되는 게시글의 모든 이미지 조회 */
SELECT *
FROM "BOARD_IMG"
WHERE BOARD_NO = 1950
ORDER BY IMG_ORDER;

---------------------------------------------

/* 상세조회 되는 게시글의 모든 댓글 조회 */
/*계층형 쿼리*/
SELECT LEVEL, C.* FROM
	(SELECT COMMENT_NO, COMMENT_CONTENT,
	    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
	    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
	FROM "COMMENT"
	JOIN MEMBER USING(MEMBER_NO)
	WHERE BOARD_NO = 1950) C
WHERE COMMENT_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
				WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
				AND COMMENT_DEL_FL = 'N')
START WITH PARENT_COMMENT_NO IS NULL
CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
ORDER SIBLINGS BY COMMENT_NO;

-- 현재 로그인한 회원이 게시글 좋아요를 눌렀는지 안 눌렀는지 COUNT (다시 한번 체크시 DELETE)
-- 좋아요 여부 확인 (1 : O / 0 : X)
SELECT COUNT(*) FROM BOARD_LIKE
WHERE MEMBER_NO = 1
AND BOARD_NO = 2001;
--------------------------------------------------------------------------------------------

INSERT INTO BOARD_IMG
(
	SELECT NEXT_IMG_NO(), '경로1', '원본1', '변경1', 1, 1995 FROM DUAL
	UNION
	SELECT NEXT_IMG_NO(), '경로2', '원본2', '변경3', 1, 1995 FROM DUAL
	UNION
	SELECT NEXT_IMG_NO(), '경로3', '원본2', '변경3', 1, 1995 FROM DUAL
);

SELECT * FROM BOARD_IMG;

-- SQL Error [2287] [42000]: ORA-02287: 시퀀스 번호는 이 위치에 사용할 수 없습니다
-- 하나의 서브쿼리 안에서 여러 번 SEQ 생성 안됨

--> SEQ를 별도로 생성하는 함수 생성

-- SEQ_IMG_NO 시퀀스의 다음 값을 반환하는 함수 생성
CREATE OR REPLACE FUNCTION NEXT_IMG_NO
-- 반환형
RETURN NUMBER
-- 사용할 변수
IS IMG_NO NUMBER;
BEGIN
	SELECT SEQ_IMG_NO.NEXTVAL
	INTO IMG_NO
	FROM DUAL;
	RETURN IMG_NO;
END;

SELECT NEXT_IMG_NO() FROM DUAL;

SELECT * FROM BOARD
WHERE BOARD_DEL_FL = 'Y';

--------------------------------------------------------------------------------------------------

-- 계층형 쿼리
-- 댓글 목록 조회 댓글이 0개인 게시글 2004

-- 댓글 0개인 BOARD_NO = 2004

INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 댓글 1', DEFAULT, DEFAULT,
				2004, 1, NULL); -- 2001
			
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 댓글 2', DEFAULT, DEFAULT,
				2004, 1, NULL); -- 2002
			
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 댓글 3', DEFAULT, DEFAULT,
				2004, 1, NULL); -- 2003

COMMIT;

SELECT * FROM "COMMENT" ORDER BY COMMENT_NO DESC;

-- 부모 댓글 1의 자식 댓글
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 1의 자식 1', DEFAULT, DEFAULT,
				2004, 1, 2001);
			
-- 부모 댓글 1의 자식 댓글
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 1의 자식 2', DEFAULT, DEFAULT,
				2004, 1, 2001);
				
-- 부모 댓글 2의 자식 댓글
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 2의 자식 1', DEFAULT, DEFAULT,
				2004, 1, 2002);
				
-- 부모 댓글 2의 자식 1의 자식 댓글
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL, '부모 2의 자식 1의 자식', DEFAULT, DEFAULT,
				2004, 1, 2006);
				
-- 계층형 쿼리 작성
SELECT LEVEL, COMMENT_NO, PARENT_COMMENT_NO, COMMENT_CONTENT
FROM "COMMENT"
WHERE BOARD_NO = 2004

/* 계층형 쿼리 */
-- PARANT_COMMENT_NO 값이 NULL인 행을 부모 (LV.1)
START WITH PARENT_COMMENT_NO IS NULL

-- 부모의 COMMENT_NO 와 같은 PARENT_COMMENT_NO 가진 행을 자식으로 지정
CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO

-- 형제 (같은 레벨 부모, 자식)들 간의 정렬 순서를 COMMENT_NO 오름 차순
ORDER SIBLINGS BY COMMENT_NO;

----------------------------------------------------------------------------

-- 완성형 계층형 쿼리
SELECT LEVEL, C.* FROM
(SELECT COMMENT_NO, COMMENT_CONTENT,
		    TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
		    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
		FROM "COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = 2004) C
WHERE COMMENT_DEL_FL = 'N'-- 현재 댓글이 삭제되지 않았을 때
OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
				 WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
				 AND COMMENT_DEL_FL = 'N')
START WITH PARENT_COMMENT_NO IS NULL
CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
ORDER SIBLINGS BY COMMENT_NO;

-- 자식 댓글이 있는데 삭제되면 삭제된 댓글입니다.
-- 자식 없는 댓글이 삭제되면 그냥 삭제해줄 거

UPDATE "COMMENT" SET COMMENT_DEL_FL = 'Y'
WHERE COMMENT_NO = 2003;

ROLLBACK;

--------------------------------------------------------------------------

SELECT * FROM BOARD_IMG; -- NVARCHAR2(50)
SELECT * FROM "MEMBER"; -- VARCHAR2(300)
-- 둘이 타입이 안 맞아서 UNION 안되는 걸 캐스팅으로 해결

SELECT IMG_RENAME "rename"
FROM BOARD_IMG;

SELECT SUBSTR(PROFILE_IMG, INSTR(PROFILE_IMG, '/', -1) + 1) "rename"
FROM "MEMBER"
WHERE PROFILE_IMG IS NOT NULL;

-- 위에 두 조회 결과를 하나의 테이블로 합쳐야함
SELECT IMG_RENAME "rename"
FROM BOARD_IMG
UNION
SELECT SUBSTR(PROFILE_IMG, INSTR(PROFILE_IMG, '/', -1) + 1) "rename"
FROM "MEMBER"
WHERE PROFILE_IMG IS NOT NULL;
-- [72000]: ORA-12704: 문자 집합이 일치하지 않습니다
-- 두 문자 타입이 다름 CAST(IMG_RENAME AS VARCHAR2(300)) 추가
SELECT CAST(IMG_RENAME AS VARCHAR2(300)) "rename"
FROM BOARD_IMG
UNION
SELECT SUBSTR(PROFILE_IMG, INSTR(PROFILE_IMG, '/', -1) + 1) "rename"
FROM "MEMBER"
WHERE PROFILE_IMG IS NOT NULL;

SELECT * FROM MESSAGE;

ALTER TABLE MESSAGE
ADD IMAGE BLOB
NULL;

ALTER TABLE MESSAGE DROP COLUMN IMAGE;



COMMIT;