-- 1번 문제
SELECT EMP_ID, EMP_NAME, PHONE, TO_CHAR(HIRE_DATE, 'YY/MM/DD'), DEPT_TITLE
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_CODE = (SELECT DEPT_CODE
                   FROM EMPLOYEE
                   WHERE EMP_NAME = '전지연')
AND EMP_NAME != '전지연';

-- 2번 문제
SELECT EMP_ID, EMP_NAME, PHONE, SALARY, JOB_NAME
FROM EMPLOYEE
NATURAL JOIN JOB
WHERE SALARY = (SELECT MAX(SALARY)
								FROM EMPLOYEE
								WHERE TO_CHAR(HIRE_DATE, 'YYYY-MM-DD') >= '2000-01-01');
--              WHERE EXTRACT(YEAR FROM HIRE_DATE) >= 2000

-- 3번 문제
SELECT EMP_ID, EMP_NAME, DEPT_CODE, JOB_CODE, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE (DEPT_CODE, JOB_CODE) = (SELECT DEPT_CODE, JOB_CODE
															 FROM EMPLOYEE
															 WHERE EMP_NAME = '노옹철')
AND EMP_NAME != '노옹철';

-- 4번 문제
SELECT EMP_ID, EMP_NAME, DEPT_CODE, JOB_CODE, TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE
WHERE (DEPT_CODE, JOB_CODE) = (SELECT DEPT_CODE, JOB_CODE
															 FROM EMPLOYEE
															 WHERE EXTRACT(YEAR FROM HIRE_DATE) = 2000);

-- 5번 문제
SELECT EMP_ID, EMP_NAME, DEPT_CODE, MANAGER_ID, EMP_NO, TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE
WHERE (DEPT_CODE, MANAGER_ID) = (SELECT DEPT_CODE, MANAGER_ID
																 FROM EMPLOYEE
																 WHERE EMP_NO LIKE '77%'
																 AND SUBSTR(EMP_NO, 8, 1) = '2');

-- 6번
SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
-- WHERE ENT_YN = 'N'
WHERE HIRE_DATE IN (SELECT MIN(HIRE_DATE)
                    FROM EMPLOYEE
                    LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
                    WHERE ENT_YN = 'N'
--                  WHERE ENT_YN != 'Y'
                    GROUP BY DEPT_CODE)
ORDER BY HIRE_DATE;
-- 부서별로 그룹을 묶을 때 퇴사한 직원을 서브쿼리에서 제외해야함
-- 왜? 부서별로 가장 빠른 입사자 구했을 때 D8 부서는 이태림임 (이태림 퇴사자)
--> 문제점 : 부서별로 가장 빠른 입사자 구해놓고, 메인쿼리에서 퇴사자 제외해버리면
-- D8 부서는 퇴사자인 이태림이 가장 빠른 입사자이기 때문에
-- 전체 부서 중 D8부서가 아예 제외되어버림.
--> 부서별 가장 빠른 입사자 구할 때 (서브쿼리) 퇴사한 직원을 뺀 상태에서 그룹으로 묶으면
-- D8 부서의 가장 빠른 입사자는 이태림 제외 후 전형돈이 됨.

-- 6번 다른 풀이
SELECT EMP_ID, EMP_NAME, NVL(DEPT_TITLE, '소속없음'), JOB_NAME, TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE MAIN
NATURAL JOIN JOB
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
WHERE HIRE_DATE = (SELECT MIN(HIRE_DATE)
							     FROM EMPLOYEE SUB
							     WHERE ENT_YN != 'Y'
							     AND MAIN.DEPT_CODE = SUB.DEPT_CODE
							     OR (MAIN.DEPT_CODE IS NULL AND SUB.DEPT_CODE IS NULL))
ORDER BY HIRE_DATE;

-- 7번 잘못된 풀이
SELECT EMP_ID, EMP_NAME, JOB_NAME,
			'2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' )"나이",
			 SALARY * ( 1 + NVL(BONUS, 0) ) * 12 "보너스포함연봉"
FROM EMPLOYEE
NATURAL JOIN JOB
WHERE ('2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY')) IN (SELECT MIN('2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' ))
                 FROM EMPLOYEE
                 NATURAL JOIN JOB
                 GROUP BY JOB_NAME)
ORDER BY 나이 DESC;

--SELECT EMP_ID, EMP_NAME, JOB_NAME,
--			'2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' )"나이",
--			 SALARY * ( 1 + NVL(BONUS, 0) ) * 12 "보너스포함연봉"
--FROM EMPLOYEE			 
--NATURAL JOIN JOB
--WHERE (JOB_NAME, EMP_NO) IN (SELECT JOB_NAME, EMP_NO (SELECT MIN('2024' - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' ))
--													   												  FROM JOB
--                             NATURAL JOIN EMPLOYEE
--                             GROUP BY JOB_NAME
--                             ORDER BY 2 DESC));

-- 7번
SELECT EMP_ID, EMP_NAME, JOB_NAME,
			'2024'  - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' )"나이",
			 TO_CHAR( SALARY * ( 1 + NVL(BONUS, 0) ) * 12, 'L999,999,999' )"보너스포함연봉"
FROM EMPLOYEE
NATURAL JOIN JOB
WHERE (JOB_CODE, ('2024' - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' )))
IN (SELECT JOB_CODE, MIN('2024' - TO_CHAR ( TO_DATE(SUBSTR((EMP_NO),1,2), 'RR'), 'YYYY' ))
	  FROM EMPLOYEE
    GROUP BY JOB_CODE)
ORDER BY 4 DESC;

-- 서브쿼리
SELECT MAX(EMP_NO) FROM EMPLOYEE
GROUP BY JOB_CODE;

SELECT JOB_CODE,MAX(EMP_NO) FROM EMPLOYEE
GROUP BY JOB_CODE;

-- 메인쿼리
SELECT EMP_ID, EMP_NAME, JOB_NAME,
       FLOOR ( MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RRMMDD')) / 12 ) "나이",
       TO_CHAR(SALARY * (1 + NVL(BONUS, 0)) * 12, 'L999,999,999') "보너스 포함 연봉"
       -- L 은 지역 원 단위
FROM EMPLOYEE
NATURAL JOIN JOB
WHERE EMP_NO IN (SELECT MAX(EMP_NO) FROM EMPLOYEE
								 GROUP BY JOB_CODE)
ORDER BY "나이" DESC;

SELECT EMP_ID, EMP_NAME, JOB_NAME,
       FLOOR ( MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(EMP_NO, 1, 6), 'RRMMDD')) / 12 ) "나이",
       TO_CHAR(SALARY * (1 + NVL(BONUS, 0)) * 12, 'L999,999,999') "보너스 포함 연봉"
       -- L 은 지역 원 단위
FROM EMPLOYEE
NATURAL JOIN JOB
WHERE EMP_NO IN (SELECT MAX(EMP_NO) FROM EMPLOYEE
								 JOIN JOB USING (JOB_CODE)
								 GROUP BY JOB_NAME)
ORDER BY "나이" DESC;